<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="transSQL">

	<select id="selectTransSetting" resultType="hashmap" >
		/**
		* Query ID : selectTransSetting
		* Description : 소스시스템 전송설정 조회 end
		* Author :
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.TRANS_ID
             , A.KC_ID
             , B.KC_IP
             , B.KC_PORT
             , A.CONNECT_NM
             , A.SNAPSHOT_MODE
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = A.SNAPSHOT_MODE ) AS SNAPSHOT_NM
             , A.DB_ID
             , (SELECT DB_NM FROM T_DB_I WHERE DB_ID =  A.DB_ID) AS DB_NM
             , A.DB_SVR_ID
             , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE DB_SVR_ID = A.DB_SVR_ID) AS DB_SVR_NM
             , A.EXE_STATUS
             , A.TRANS_EXRT_TRG_TB_ID
             , A.TRANS_EXRT_EXCT_TB_ID
             , A.FRST_REGR_ID
             , A.FRST_REG_DTM
             , A.LST_MDFR_ID
             , A.LST_MDF_DTM
             , A.COMPRESSION_TYPE
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = A.COMPRESSION_TYPE ) AS COMPRESSION_NM
             , A.META_DATA
             , A.REGI_ID
             , C.REGI_NM
             , C.REGI_IP
             , C.REGI_PORT
             , A.CONNECT_TYPE
          FROM T_TRANSCNG_I A
               LEFT JOIN T_TRANS_CON_INF B ON A.KC_ID = B.KC_ID
               LEFT JOIN T_TRANS_REGI_INF C ON A.REGI_ID = C.REGI_ID
         WHERE 1=1
           AND A.DB_SVR_ID = #{db_svr_id}

         <if test="connect_nm != null and connect_nm != '' ">
           AND A.CONNECT_NM = #{connect_nm}
         </if>

         ORDER BY A.LST_MDF_DTM DESC
	</select>
	
	<select id="selectTransDBMS" parameterType="transDbmsVO"  resultType="transDbmsVO">
		/**
		* Query ID : selectTransDBMS
		* Description : 전송설정 조회
		* Author :
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.TRANS_SYS_ID
             , A.TRANS_SYS_NM
             , A.DBMS_DSCD_NM
             , A.DBMS_DSCD
             , A.IPADR
             , A.DTB_NM
             , A.SPR_USR_ID
             , A.PORTNO
             , A.SCM_NM
             , A.PWD
             , A.FRST_REGR_ID
             , A.FRST_REG_DTM
             , A.LST_MDFR_ID
             , A.LST_MDF_DTM
             , A.EXE_STATUS
             , A.FILE_PATH
          FROM (
               SELECT
                      TRANS_SYS_ID
                    , TRANS_SYS_NM
                    , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = DBMS_DSCD ) AS DBMS_DSCD_NM
                    , DBMS_DSCD
                    , IPADR
                    , DTB_NM
                    , SPR_USR_ID
                    , PORTNO
                    , SCM_NM
                    , PWD
                    , FRST_REGR_ID
                    , TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
                    , LST_MDFR_ID
                    , TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM 
                    , EXE_STATUS
                    , FILE_PATH
                 FROM T_TRANS_SYS_INF
                WHERE 1 = 1

               <if test="trans_sys_id != null and trans_sys_id != '' ">
                  AND TRANS_SYS_ID = #{trans_sys_id}
               </if>

               <if test="trans_sys_nm != null and trans_sys_nm != '' ">
                  AND TRANS_SYS_NM LIKE '%' || #{trans_sys_nm} || '%'
               </if>
 
               <if test="ipadr != null and ipadr != '' ">
                  AND IPADR LIKE '%' || #{ipadr} || '%'
               </if>

               <if test="dtb_nm != null and dtb_nm != '' ">
                  AND DTB_NM = #{dtb_nm}
               </if>
               
                <if test="dbms_sch_gbn != null and dbms_sch_gbn != '' ">
                  AND EXE_STATUS = 'TC001501'
               </if>
	
                ORDER BY LST_MDF_DTM DESC
         ) A
	</select>
	
	<select id="trans_sys_nmCheck" resultType="int" parameterType="string"  >
		/**
		* Query ID : trans_sys_nmCheck
		* Description : 시스템명 중복 체크
		* Author :
		**/
        SELECT 
               COUNT(*)
          FROM T_TRANS_SYS_INF
         WHERE TRANS_SYS_NM = #{trasn_sys_nm}
	</select>
	
	<insert id="insertTransDBMS"  parameterType="transDbmsVO">
		/**
		* Query ID : insertTransDBMS
		* Description : TRANS DBMS 시스템 등록
		* Author : 변승우
		**/
        INSERT INTO T_TRANS_SYS_INF
                    (
                     TRANS_SYS_ID
                   , TRANS_SYS_NM
                   , DBMS_DSCD
                   , IPADR
                   , DTB_NM
                   , SPR_USR_ID
                   , PORTNO
                   , SCM_NM
                   , PWD
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                   , EXE_STATUS
                   , FILE_PATH
                    ) 
                    VALUES
                    (
                     nextval('q_trans_sys_inf_01')
                   , #{trans_sys_nm}
                   , #{dbms_dscd}
                   , #{ipadr}
                   , #{dtb_nm}
                   , #{spr_usr_id}
                   , #{portno}
                   , #{scm_nm}
                   , #{pwd}
                   , #{frst_regr_id}
                   , clock_timestamp()
                   , #{lst_mdfr_id}
                   , clock_timestamp()	
                   , #{exe_status}
                   , #{file_path}
                    )
	</insert>
	
	<select id="selectTransDbmsIngChk" parameterType="transDbmsVO" resultType="hashMap">
		/**
		*  Query ID : selectTransDbmsIngChk
		* Description : trans DBMS 사용여부 체크
		* Author :
		**/
        SELECT
               COUNT(*) AS TOT_CNT,
               COALESCE(SUM(A.ING_CNT),0) AS ING_CNT
          FROM (
                SELECT
                       TRANS_ID,
                       CASE WHEN EXE_STATUS = 'TC001501' THEN 1 ELSE 0 END AS ING_CNT
                  FROM T_TRANSCNG_TARGET_I
                 WHERE TRANS_SYS_ID = #{trans_trg_sys_id}::numeric
          ) A
	</select>

	<update id="updateTransDBMS"  parameterType="transDbmsVO">
		/**
	 	* Query ID : updateTransDBMS
	 	* Description : TRANS DBMS 수정
	 	* Author : 
	 	**/
        UPDATE T_TRANS_SYS_INF
           SET
               IPADR = #{ipadr}
             , DTB_NM = #{dtb_nm}
             , SPR_USR_ID = #{spr_usr_id}
             , PORTNO = #{portno}
             , SCM_NM = #{scm_nm}
             , PWD = #{pwd}
             , EXE_STATUS = #{exe_status}
             , FILE_PATH = #{file_path}
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE TRANS_SYS_ID=#{trans_sys_id}::numeric
	</update>
	
	 <delete id="deleteTransDBMS" parameterType="transDbmsVO">
		/**
	 	* Query ID : deleteTransDBMS
	 	* Description : DB2PG DBMS시스템 삭제
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANS_SYS_INF
         WHERE TRANS_SYS_ID = #{trans_sys_id}
	</delete>

	<select id="selectTargetTransSetting" resultType="hashmap" >
		/**
		* Query ID : selectTargetTransSetting end
		* Description : 타겟시스템 전송설정 조회
		* Author :
		**/
         SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.TRANS_ID
             , C.KC_IP
             , C.KC_PORT
             , A.KC_ID
             , A.CONNECT_NM
             , A.SNAPSHOT_MODE
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = A.SNAPSHOT_MODE ) AS SNAPSHOT_NM
             , A.DB_SVR_ID
             , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE DB_SVR_ID = A.DB_SVR_ID) AS DB_SVR_NM
             , A.EXE_STATUS
             , A.TRANS_EXRT_TRG_TB_ID
             , A.TRANS_EXRT_EXCT_TB_ID
             , A.FRST_REGR_ID
             , A.FRST_REG_DTM
             , A.LST_MDFR_ID
             , A.LST_MDF_DTM
             , A.TRANS_SYS_ID
             , B.TRANS_SYS_NM
             , B.EXE_STATUS AS DB_EXE_STATUS
             , A.REGI_ID
             , A.TOPIC_TYPE
             , D.REGI_NM
             , D.REGI_IP
             , D.REGI_PORT
          FROM T_TRANSCNG_TARGET_I A
               LEFT OUTER JOIN T_TRANS_SYS_INF B ON A.TRANS_SYS_ID = B.TRANS_SYS_ID
               LEFT JOIN T_TRANS_CON_INF C ON A.KC_ID = C.KC_ID
               LEFT JOIN T_TRANS_REGI_INF D ON A.REGI_ID = D.REGI_ID
         WHERE 1=1
           AND A.DB_SVR_ID = #{db_svr_id}

         <if test="connect_nm != null and connect_nm != '' ">
           AND A.CONNECT_NM = #{connect_nm}
         </if>

         ORDER BY A.LST_MDF_DTM DESC
	</select>
	
	<select id="selectTransInfo" resultType="hashmap" >
		/**
		* Query ID : selectTransInfo
		* Description : 전송설정 조회 end
		* Author :
		**/
       SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.TRANS_ID
             , C.KC_IP
             , C.KC_PORT
             , A.KC_ID
             , A.CONNECT_NM
             , A.SNAPSHOT_MODE
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = A.SNAPSHOT_MODE ) AS SNAPSHOT_NM
             , C.KC_NM AS KC_NM
             , A.DB_ID
             , (SELECT DB_NM FROM T_DB_I WHERE DB_ID =  A.DB_ID) AS DB_NM
             , A.DB_SVR_ID
             , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE DB_SVR_ID = A.DB_SVR_ID) AS DB_SVR_NM
             , A.EXE_STATUS
             , A.TRANS_EXRT_TRG_TB_ID
             , A.TRANS_EXRT_EXCT_TB_ID
             , A.FRST_REGR_ID
             , A.FRST_REG_DTM
             , A.LST_MDFR_ID
             , A.LST_MDF_DTM
             , coalesce(A.COMPRESSION_TYPE, 'TC003701') as COMPRESSION_TYPE
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = coalesce(A.COMPRESSION_TYPE, 'TC003701') ) AS COMPRESSION_NM
             , coalesce(A.META_DATA, 'OFF') as META_DATA
             , A.TRANS_COM_ID
             , coalesce(B.TRANS_COM_CNG_NM, '') AS TRANS_COM_CNG_NM
             , B.PLUGIN_NAME
             , B.HEARTBEAT_INTERVAL_MS
             , B.MAX_BATCH_SIZE
             , B.MAX_QUEUE_SIZE
             , B.OFFSET_FLUSH_INTERVAL_MS
             , B.OFFSET_FLUSH_TIMEOUT_MS
             , A.CONNECT_TYPE
             , A.REGI_ID
             , D.REGI_NM
             , D.REGI_IP
             , D.REGI_PORT
          FROM T_TRANSCNG_I A
               LEFT OUTER JOIN T_TRANSCOMCNG_I B ON A.TRANS_COM_ID = B.TRANS_COM_ID
               LEFT JOIN T_TRANS_CON_INF C ON A.KC_ID = C.KC_ID
               LEFT JOIN T_TRANS_REGI_INF D ON A.REGI_ID = D.REGI_ID
         WHERE 1=1
           AND A.TRANS_ID = #{trans_id}
         ORDER BY A.LST_MDF_DTM DESC
	</select>
	
	<select id="selectMappInfo" resultType="hashmap" >
		/**
		* Query ID : selectMappInfo
		* Description : 전송대상 조회 end
		* Author :
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , TTEM.TRANS_EXRT_TRG_TB_ID AS TRANS_EXRT_TRG_TB_ID
             , COALESCE(TTEM.EXRT_TRG_TB_NM, '')  AS EXRT_TRG_TB_NM
             , COALESCE(TTEM.EXRT_TRG_SCM_NM, '') AS EXRT_TRG_SCM_NM
             , TTEM.SCHEMA_TOTAL_CNT AS SCHEMA_TOTAL_CNT
             , TTEM.TABLE_TOTAL_CNT AS TABLE_TOTAL_CNT
             , TTEM.FRST_REGR_ID AS FRST_REGR_ID
             , TTEM.FRST_REG_DTM AS FRST_REG_DTM
             , COALESCE(TTRI.REGI_ID, 0) AS REGI_ID
             , COALESCE(TTRI.REGI_NM, '') AS REGI_NM
             , COALESCE(TTRI.REGI_IP, '') AS REGI_IP
             , COALESCE(TTRI.REGI_PORT, 0) AS REGI_PORT
          FROM T_TRANS_EXRTTRG_MAPP TTEM
          LEFT OUTER JOIN T_TRANS_REGI_INF TTRI 
            ON TTEM.REGI_ID = TTRI.REGI_ID 
         WHERE 1=1
           AND TRANS_EXRT_TRG_TB_ID = #{trans_exrt_trg_tb_id}
	</select>

	<select id="selectTargetTransInfo" resultType="hashmap" >
		/**
		* Query ID : selectTargetTransInfo
		* Description : target 전송설정 조회 end
		* Author :
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.TRANS_ID
             , C.KC_IP
             , C.KC_PORT
             , A.KC_ID
             , C.KC_NM
             , A.CONNECT_NM
             , A.DB_SVR_ID
             , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE DB_SVR_ID = A.DB_SVR_ID) AS DB_SVR_NM
             , A.TRANS_SYS_ID
             , A.TRANS_EXRT_TRG_TB_ID
             , A.TRANS_EXRT_EXCT_TB_ID
             , A.EXE_STATUS
             , A.TOPIC_TYPE
             , B.IPADR
             , B.DTB_NM
             , B.SPR_USR_ID
             , B.PORTNO
             , B.PWD
             , B.SCM_NM
             , B.TRANS_SYS_NM
             , B.EXE_STATUS AS DB_EXE_STATUS
             , B.DBMS_DSCD
             , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SYS_CD = B.DBMS_DSCD ) AS DBMS_DSCD_NM
             , B.FILE_PATH
             , A.TOPIC_TYPE
             , A.REGI_ID
             , D.REGI_NM
             , D.REGI_IP
             , D.REGI_PORT
          FROM T_TRANSCNG_TARGET_I A
               LEFT OUTER JOIN T_TRANS_SYS_INF B ON A.TRANS_SYS_ID = B.TRANS_SYS_ID
               LEFT JOIN T_TRANS_CON_INF C ON A.KC_ID = C.KC_ID
               LEFT JOIN T_TRANS_REGI_INF D ON A.REGI_ID = D.REGI_ID
         WHERE 1=1
           AND A.TRANS_ID = #{trans_id}
         LIMIT 1
	</select>
	
    <delete id="deleteTransSetting" parameterType="int">
    	/**
	 	* Query ID : deleteTransSetting
	 	* Description : 데이터전송 설정 삭제 end
	 	* Author :
	 	**/
        DELETE FROM T_TRANSCNG_I
         WHERE TRANS_ID = #{trans_id}
    </delete>
	
	<delete id="deleteTransTargetSetting" parameterType="int">
    	/**
	 	* Query ID : deleteTransSetting
	 	* Description : 데이터전송 설정 삭제 end
	 	* Author :
	 	**/
        DELETE FROM T_TRANSCNG_TARGET_I
         WHERE TRANS_ID = #{trans_id}
    </delete>
	
	<select id="connect_nm_Check" resultType="int">
		/**
		* Query ID : connect_nm_Check
		* Description : 커넥터 중복 체크 end
		* Author : 
		**/
        SELECT 
               COUNT(CONNECT_NM)
          FROM T_TRANSCNG_I
         WHERE CONNECT_NM = #{connect_nm}
	</select>
	
	<select id="connect_target_nm_Check" resultType="int">
		/**
		* Query ID : connect_target_nm_Check
		* Description : 커넥터 중복 체크
		* Author : 변승우
		**/
        SELECT 
               COUNT(CONNECT_NM)
          FROM T_TRANSCNG_TARGET_I
         WHERE CONNECT_NM = #{connect_nm}
	</select>

	<select id="selectTransExrttrgMappSeq" resultType="int">
		/**
	 	*  Query ID : selectTransExrttrgMappSeq
	 	*  Description : 전송 포함대상 작업 ID SEQ 조회 end
	 	*  Author :
	 	**/		
        SELECT setval('q_t_trans_exrttrg_mapp_01',nextval('q_t_trans_exrttrg_mapp_01'))
	</select>

	<insert id="insertTransExrttrgMapp" parameterType="transMappVO">
		/**
		* Query ID : insertExrttrgMapp
		* Description : 전송 대상 스키마/테이블 등록
		* Author : 변승우
		**/
        INSERT INTO T_TRANS_EXRTTRG_MAPP
                   (
                    TRANS_EXRT_TRG_TB_ID
                  , EXRT_TRG_TB_NM 
                  , EXRT_TRG_SCM_NM
                  , SCHEMA_TOTAL_CNT
                  , TABLE_TOTAL_CNT
                  , REGI_ID
                  , FRST_REGR_ID
                  , FRST_REG_DTM
                   )
                   VALUES 
                   (
                    #{trans_exrt_trg_tb_id}
                  , #{exrt_trg_tb_nm}
                  , #{exrt_trg_scm_nm}
                  , #{schema_total_cnt}::numeric
                  , #{table_total_cnt}::numeric
                  , #{regi_id}::numeric
                  , #{frst_regr_id}
                  , clock_timestamp()
                   )
	</insert>
	
	<insert id="insertConnectInfo"  parameterType="transVO">
		/**
		* Query ID : insertConnectInfo
		* Description : 전송설정 정보 등록 end
		* Author : 변승우
		**/
        INSERT INTO T_TRANSCNG_I
                   (
                    TRANS_ID
                  , CONNECT_NM
                  , SNAPSHOT_MODE
                  , DB_ID
                  , DB_SVR_ID
                  , TRANS_EXRT_TRG_TB_ID
                  , FRST_REGR_ID
                  , FRST_REG_DTM
                  , LST_MDFR_ID
                  , LST_MDF_DTM 
                  , COMPRESSION_TYPE
                  , META_DATA
                  , KC_ID
                  , TRANS_COM_ID
                  , REGI_ID
                  , CONNECT_TYPE
                   ) 
            VALUES
                   (
                    nextval('q_t_transcng_i_01')
                  , #{connect_nm}
                  , #{snapshot_mode}
                  , #{db_id}
                  , #{db_svr_id}
                  , #{trans_exrt_trg_tb_id}
                  , #{frst_regr_id}
                  , clock_timestamp()
                  , #{frst_regr_id}
                  , clock_timestamp()
                  , #{compression_type}
                  , #{meta_data}
                  , #{kc_id}::numeric
                  , #{trans_com_id}::numeric
                  , #{regi_id}::numeric
                  , #{connect_type}
                   )
	</insert>
	
	<insert id="insertTargetConnectInfo"  parameterType="transVO">
		/**
		* Query ID : insertTargetConnectInfo 
		* Description : target 전송설정 정보 등록 end
		* Author : 
		**/
        INSERT INTO T_TRANSCNG_TARGET_I
                   (
                    TRANS_ID
                  , CONNECT_NM
                  , DB_SVR_ID
                  , TRANS_SYS_ID
                  , TRANS_EXRT_TRG_TB_ID
                  , FRST_REGR_ID
                  , FRST_REG_DTM
                  , LST_MDFR_ID
                  , LST_MDF_DTM 
                  , KC_ID
                  , REGI_ID
                  , TOPIC_TYPE
                   ) 
            VALUES
                   (
                    #{trans_id}::numeric
                  , #{connect_nm}
                  , #{db_svr_id}
                  , #{trans_trg_sys_id}::numeric
                  , #{trans_exrt_trg_tb_id}
                  , #{frst_regr_id}
                  , clock_timestamp()
                  , #{frst_regr_id}
                  , clock_timestamp()
                  , #{kc_id}::numeric
                  , #{regi_id}::numeric
                  , #{topic_type}
                   )
	</insert>
	
	<update id="updateTransExrttrgMapp" parameterType="transMappVO">
    	/**
	 	* Query ID : transMappVO
	 	* Description : 스키마,테이블 맵핑정보 수정 end
	 	* Author : 
	 	**/
		UPDATE T_TRANS_EXRTTRG_MAPP SET
			 	exrt_trg_tb_nm  = #{exrt_trg_tb_nm},
				exrt_trg_scm_nm = #{exrt_trg_scm_nm},
				schema_total_cnt = #{schema_total_cnt}::numeric,
				table_total_cnt = #{table_total_cnt}::numeric,
				regi_id = #{regi_id}::numeric,
				frst_regr_id =  #{frst_regr_id}, 
				frst_reg_dtm =  clock_timestamp()
	 		WHERE trans_exrt_trg_tb_id = #{trans_exrt_trg_tb_id}		 		
    </update>
    
   	<update id="updateConnectInfo" parameterType="transVO">
    	/**
	 	* Query ID : updateConnectInfo
	 	* Description : 전송설정 수정
	 	* Author : 변승우
	 	**/
		UPDATE T_TRANSCNG_I SET
				snapshot_mode = #{snapshot_mode},
				compression_type = #{compression_type},
				meta_data = #{meta_data},
				trans_com_id = #{trans_com_id}::numeric,
				lst_mdfr_id =  #{frst_regr_id}, 
				lst_mdf_dtm =  clock_timestamp(),
				regi_id = #{regi_id}::numeric,
				connect_type = #{connect_type}
	 		WHERE TRANS_ID = #{trans_id}	 		
    </update>
	
   	<update id="updateTargetConnectInfo" parameterType="transVO">
    	/**
	 	* Query ID : updateTargetConnectInfo
	 	* Description : 전송설정 수정
	 	* Author : 변승우
	 	**/
		UPDATE T_TRANSCNG_TARGET_I 
		   SET
				TRANS_SYS_ID = #{trans_trg_sys_id}::numeric,
				lst_mdfr_id =  #{frst_regr_id}, 
				lst_mdf_dtm =  clock_timestamp(),
				regi_id = #{regi_id}::numeric,
				topic_type =  #{topic_type}
	 		WHERE TRANS_ID = #{trans_id}	 		
    </update>

	<insert id="insertExrtexctMapp" parameterType="transMappVO">
		/**
		* Query ID : insertExrtexctSrcTb
		* Description : 전송 제외 스키마/테이블 등록
		* Author : 변승우
		**/
		INSERT INTO T_TRANS_EXRTEXCT_MAPP
		(
		  TRANS_EXRT_EXCT_TB_ID
		, EXRT_EXCT_TB_NM 
		, EXRT_EXCT_SCM_NM
		, SCHEMA_TOTAL_CNT
		, TABLE_TOTAL_CNT
		, FRST_REGR_ID
		, FRST_REG_DTM
		)
		VALUES
		(
		  #{trans_exrt_exct_tb_id}
		, #{exrt_exct_tb_nm} 
		, #{exrt_exct_scm_nm}
		, #{schema_total_cnt}::numeric
		, #{table_total_cnt}::numeric
		, #{frst_regr_id}
		, clock_timestamp()
		)
	</insert>

    <delete id="deleteTransExrttrgMapp" parameterType="int">
    	/**
	 	* Query ID : deleteTransExrttrgMapp
	 	* Description : 스키마,테이블 맵핑정보 삭제 end
	 	* Author :
	 	**/
    	DELETE FROM T_TRANS_EXRTTRG_MAPP
    	 WHERE trans_exrt_trg_tb_id = #{trans_exrt_trg_tb_id} 
    </delete>

	<select id="selectTransInfoAuto" resultType="hashmap" >
		/**
		* Query ID : selectTransInfoAuto
		* Description : 전송설정 조회 auto
		* Author : 변승우
		**/
        SELECT 
               A.TRANS_ID
             , A.TRANS_EXRT_TRG_TB_ID
          FROM T_TRANSCNG_I A
         WHERE 1=1
           AND A.DB_SVR_ID = #{db_svr_id}
           AND A.EXE_STATUS = 'TC001502'
         ORDER BY A.LST_MDF_DTM DESC
         LIMIT 1
	</select>

	<select id="selectTargetTransInfoAuto" resultType="hashmap" >
		/**
		* Query ID : selectTargetTransInfoAuto
		* Description : target 전송설정 조회 auto
		* Author : 변승우
		**/
        SELECT 
               A.TRANS_ID
             , A.TRANS_EXRT_TRG_TB_ID
          FROM T_TRANSCNG_TARGET_I A
               LEFT OUTER JOIN T_TRANS_SYS_INF B ON A.TRANS_SYS_ID = B.TRANS_SYS_ID
         WHERE 1=1
           AND A.EXE_STATUS = 'TC001502'
         ORDER BY A.LST_MDF_DTM DESC
         LIMIT 1
	</select>
	
	<select id="selectTransKafkaConList" parameterType="transDbmsVO"  resultType="transDbmsVO">
		/**
		* Query ID : selectTransKafkaConList
		* Description : kafka connect 조회(완료)
		* Author : 
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.KC_ID
             , A.KC_NM
             , A.KC_IP
             , A.KC_PORT
             , A.EXE_STATUS
             , A.FRST_REGR_ID
             , A.FRST_REG_DTM
             , A.LST_MDFR_ID
             , A.LST_MDF_DTM
         FROM (
               SELECT
                      KC_ID
                    , KC_NM
                    , KC_IP
                    , KC_PORT
                    , EXE_STATUS
                    , FRST_REGR_ID
                    , TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
                    , LST_MDFR_ID
                    , TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM 
                 FROM T_TRANS_CON_INF
                WHERE 1 = 1

                  <if test="kc_id != null and kc_id != '' ">
                      AND KC_ID = #{kc_id}::numeric
                  </if>

                  <if test="kc_nm != null and kc_nm != '' ">
                      AND KC_NM LIKE '%' || #{kc_nm} || '%'
                  </if>
	
                ORDER BY LST_MDF_DTM DESC
        ) A
	</select>
	
	<select id="selectTransRegiList" parameterType="transRegiVO"  resultType="transRegiVO">
		/**
		* Query ID : selectTransRegiList
		* Description : Schema Registry 조회(완료)
		* Author : 
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.*
         FROM (
               SELECT
                      REGI_ID
                    , REGI_NM
                    , REGI_IP
                    , REGI_PORT
                    , EXE_STATUS
                    , FRST_REGR_ID
                    , TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
                    , LST_MDFR_ID
                    , TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM 
                 FROM T_TRANS_REGI_INF
                WHERE 1 = 1
                  <if test="regi_id != null and regi_id != '' ">
                      AND REGI_ID = #{regi_id}::numeric
                  </if>

                  <if test="regi_nm != null and regi_nm != '' ">
                      AND REGI_NM LIKE '%' || #{regi_nm} || '%'
                  </if>
	
                ORDER BY LST_MDF_DTM DESC
        ) A
	</select>
	
	<select id="trans_connect_nmCheck" resultType="int" parameterType="string"  >
		/**
		* Query ID : trans_connect_nmCheck
		* Description : 커넥트명 중복 체크
		* Author : 변승우
		**/
        SELECT 
               COUNT(*)
          FROM T_TRANS_CON_INF
         WHERE KC_NM = #{kc_nm}
	</select>
	
	<select id="trans_Registry_nmCheck" resultType="int" parameterType="string"  >
		/**
		* Query ID : trans_Registry_nmCheck
		* Description : 커넥트명 중복 체크
		* Author : 김민정
		**/
        SELECT 
               COUNT(*)
          FROM T_TRANS_REGI_INF
         WHERE REGI_NM = #{regi_nm}
	</select>

	<insert id="insertTransKafkaConnect"  parameterType="transDbmsVO">
		/**
		* Query ID : insertTransKafkaConnect
		* Description : TRANS kafka connect 등록
		* Author : 
		**/
        INSERT INTO T_TRANS_CON_INF
                    (
                     KC_ID
                   , KC_NM
                   , KC_IP
                   , KC_PORT
                   , EXE_STATUS
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                    ) 
                    VALUES
                    (
                     nextval('q_trans_con_inf_01')
                   , #{kc_nm}
                   , #{kc_ip}
                   , #{kc_port}::numeric
                   , 'TC001501'
                   , #{frst_regr_id}
                   , clock_timestamp()
                   , #{lst_mdfr_id}
                   , clock_timestamp()
                    )
	</insert>
	
	
	<insert id="insertTransSchemaRegistry"  parameterType="transRegiVO">
		/**
		* Query ID : insertTransSchemaRegistry
		* Description : TRANS Schema Registry
		* Author : 
		**/
        INSERT INTO T_TRANS_REGI_INF
                    (
                     REGI_ID
                   , REGI_NM
                   , REGI_IP
                   , REGI_PORT
                   , EXE_STATUS
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                    ) 
                    VALUES
                    (
                     nextval('q_trans_regi_inf_01')
                   , #{regi_nm}
                   , #{regi_ip}
                   , #{regi_port}::numeric
                   , 'TC001501'
                   , #{frst_regr_id}
                   , clock_timestamp()
                   , #{lst_mdfr_id}
                   , clock_timestamp()
                    )
	</insert>
	
	 <delete id="deleteTransKafkaConnect" parameterType="transDbmsVO">
		/**
	 	* Query ID : deleteTransKafkaConnect
	 	* Description : trans connect  삭제
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANS_CON_INF
         WHERE KC_ID = #{kc_id}::numeric
	</delete>

	 <delete id="deleteTransSchemaRegistry" parameterType="transRegiVO">
		/**
	 	* Query ID : deleteTransSchemaRegistry
	 	* Description : Schema Registry 삭제
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANS_REGI_INF
         WHERE REGI_ID = #{regi_id}::numeric
	</delete>

	<update id="updateTransKafkaConnect"  parameterType="transDbmsVO">
		/**
	 	* Query ID : updateTransKafkaConnect
	 	* Description : TRANS connect 수정
	 	* Author : 
	 	**/
        UPDATE T_TRANS_CON_INF
           SET
               KC_IP = #{kc_ip}
             , KC_PORT = #{kc_port}::numeric
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE KC_ID=#{kc_id}::numeric
	</update>
	
		<update id="updateTransShcemaRegistry"  parameterType="transRegiVO">
		/**
	 	* Query ID : updateTransShcemaRegistry
	 	* Description : TRANS Schema Registry 수정
	 	* Author : 
	 	**/
        UPDATE T_TRANS_REGI_INF
           SET
               REGI_IP = #{regi_ip}
             , REGI_PORT = #{regi_port}::numeric
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE REGI_ID=#{regi_id}::numeric
	</update>
	
	<select id="selectTransComSettingCngInfo" resultType="hashMap" parameterType="hashMap">
   		/**
	 	* Query ID : selectTransComSettingCngInfo
	 	* Description : TRANS 공통 설정 end
	 	* Author : 
	 	**/
       SELECT A.TRANS_COM_ID,
              A.TRANS_COM_CNG_NM,
              A.PLUGIN_NAME,
              A.HEARTBEAT_INTERVAL_MS,
              A.HEARTBEAT_ACTION_QUERY,
              A.MAX_BATCH_SIZE,
              A.MAX_QUEUE_SIZE,
              A.OFFSET_FLUSH_INTERVAL_MS,
              A.OFFSET_FLUSH_TIMEOUT_MS,
              A.AUTO_CREATE,
              A.TRANSFORMS_YN
         FROM T_TRANSCOMCNG_I A
        WHERE A.TRANS_COM_ID = #{trans_com_id}::numeric
        LIMIT 1
	</select>
	
	<insert id="insertTransCommonSetting" parameterType="transVO">
        /**
        * Query ID : "insertTransCommonSetting"
        * Description : 기본설정 등록
        * Author : 
        **/
       INSERT INTO experdb_management.t_transcomcng_i
                   (
                   trans_com_id, 
                   trans_com_cng_nm,
                   plugin_name, 
                   heartbeat_interval_ms, 
                   heartbeat_action_query, 
                   max_batch_size, 
                   max_queue_size, 
                   offset_flush_interval_ms, 
                   offset_flush_timeout_ms, 
                   auto_create, 
                   transforms_yn,
                   frst_regr_id, 
                   frst_reg_dtm, 
                   lst_mdfr_id, 
                   lst_mdf_dtm)
           VALUES( nextval('q_t_transcomcng_i_01'),
                  #{trans_com_cng_nm}, 
                  #{plugin_name}, 
                  #{heartbeat_interval_ms}, 
                  #{heartbeat_action_query}, 
                  #{max_batch_size}, 
                  #{max_queue_size}, 
                  #{offset_flush_interval_ms},
                  #{offset_flush_timeout_ms}, 
                  #{auto_create}, 
                  #{transforms_yn},
                  #{frst_regr_id}, 
                  clock_timestamp(), 
                  #{lst_mdfr_id}, 
                  clock_timestamp());
	</insert>
	
	<update id="updateTransCommonSetting" parameterType="transVO">
        /**
        * Query ID : "updateTransCommonSetting"
        * Description : 기본설정 수정 end
        * Author : 
        **/
        UPDATE T_TRANSCOMCNG_I
           SET PLUGIN_NAME = #{plugin_name}
             , TRANS_COM_CNG_NM = #{trans_com_cng_nm}
             , HEARTBEAT_INTERVAL_MS = #{heartbeat_interval_ms}
             , HEARTBEAT_ACTION_QUERY = #{heartbeat_action_query}
             , MAX_BATCH_SIZE = #{max_batch_size}
             , MAX_QUEUE_SIZE = #{max_queue_size}
             , OFFSET_FLUSH_INTERVAL_MS = #{offset_flush_interval_ms}
             , OFFSET_FLUSH_TIMEOUT_MS = #{offset_flush_timeout_ms}
             , AUTO_CREATE = #{auto_create}
             , TRANSFORMS_YN = #{transforms_yn}
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE TRANS_COM_ID = #{trans_com_id}::numeric
	</update>
	
	<select id="selectTransKafkaConIngChk" parameterType="transDbmsVO" resultType="hashMap">
		/**
		*  Query ID : selectTransKafkaConIngChk
		* Description : trans connect 사용여부 체크
		* Author :
		**/
        SELECT
               COUNT(*) AS TOT_CNT
          FROM T_TRANSCNG_TARGET_I
         WHERE KC_ID = #{kc_id}::numeric
	</select>
	
		<select id="selectTransSchemRegiIngChk" parameterType="transDbmsVO" resultType="hashMap">
		/**
		*  Query ID : selectTransSchemRegiIngChk
		* Description : trans schema Registry 사용여부 체크
		* Author :
		**/
        SELECT
               COUNT(*) AS TOT_CNT
          FROM T_TRANSCNG_TARGET_I
         WHERE REGI_ID = #{regi_id}::numeric
	</select>
	
	<update id="updateTransKafkaConnectFaild"  parameterType="transDbmsVO">
		/**
	 	* Query ID : updateTransKafkaConnect
	 	* Description : TRANS connect 수정
	 	* Author : 
	 	**/
        UPDATE T_TRANS_CON_INF
           SET
               EXE_STATUS = #{exe_status}
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE KC_ID=#{kc_id}::numeric
	</update>
	
	<update id="updateTransSchemaConnectFaild"  parameterType="transDbmsVO">
		/**
	 	* Query ID : updateTransSchemaConnectFaild
	 	* Description : TRANS schema Registry 수정
	 	* Author : 
	 	**/
        UPDATE T_TRANS_REGI_INF
           SET
               EXE_STATUS = #{exe_status}
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE REGI_ID=#{regi_id}::numeric
	</update>

	<select id="selectTransComConPopList" parameterType="transVO"  resultType="hashmap">
			/**
			* Query ID : selectTransComConPopList 
			* Description : 기본사항 리스트 조회 end
			* Author : 
			**/
	        SELECT 
	               (ROW_NUMBER() OVER()) AS ROWNUM
	             , (ROW_NUMBER() OVER()) AS IDX
	             , A.TRANS_COM_ID
	             , A.PLUGIN_NAME
	             , A.HEARTBEAT_INTERVAL_MS
	             , A.HEARTBEAT_ACTION_QUERY
	             , A.MAX_BATCH_SIZE
	             , A.MAX_QUEUE_SIZE
	             , A.OFFSET_FLUSH_INTERVAL_MS
	             , A.OFFSET_FLUSH_TIMEOUT_MS
	             , A.AUTO_CREATE
	             , A.TRANSFORMS_YN
	             , A.TRANS_COM_CNG_NM
	          FROM (
	               SELECT TRANS_COM_ID
                        , PLUGIN_NAME
                        , HEARTBEAT_INTERVAL_MS
                        , HEARTBEAT_ACTION_QUERY
                        , MAX_BATCH_SIZE
                        , MAX_QUEUE_SIZE
                        , OFFSET_FLUSH_INTERVAL_MS
                        , OFFSET_FLUSH_TIMEOUT_MS
                        , AUTO_CREATE
                        , TRANSFORMS_YN
                        , TRANS_COM_CNG_NM
                     FROM T_TRANSCOMCNG_I
	                WHERE 1 = 1
	                ORDER BY LST_MDF_DTM DESC
	         ) A
	</select>
	
	 <delete id="deleteTransComConSet" parameterType="transVO">
		/**
	 	* Query ID : deleteTransComConSet
	 	* Description : 기본설정 삭제 end
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANSCOMCNG_I
         WHERE TRANS_COM_ID = #{trans_com_id}::numeric
	</delete>

	<update id="updateTransTarTopic"  parameterType="transVO">
		/**
	 	* Query ID : updateTransTarTopic
	 	* Description : TRANS target topic update end
	 	* Author : 
	 	**/
        UPDATE T_TRANS_TOPIC_I
           SET
               TAR_TRANS_EXRT_TRG_TB_ID = #{tar_trans_exrt_trg_tb_id}::numeric
             , TAR_TRANS_ID = #{tar_trans_id}::numeric
             , TABLE_TOTAL_CNT = 1
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE TOPIC_NM = #{topic_nm}
           AND KC_ID = #{kc_id}::numeric
	</update>
	
	<select id="selectTargetConnectSeq" resultType="int">
		/**
	 	*  Query ID : selectTargetConnectSeq
	 	*  Description : 타겟 커넥터 seq
	 	*  Author : 변승우
	 	**/		
        SELECT nextval('q_t_transcng_i_01')
	</select>

	<update id="updateTransTarTopicChogihwa"  parameterType="transVO">
		/**
	 	* Query ID : updateTransTarTopic
	 	* Description : TRANS target topic update end
	 	* Author : 
	 	**/
        UPDATE T_TRANS_TOPIC_I
           SET
               TAR_TRANS_EXRT_TRG_TB_ID = null
             , TAR_TRANS_ID = null
             , TABLE_TOTAL_CNT = 0
             , LST_MDFR_ID = #{lst_mdfr_id}
             , LST_MDF_DTM = clock_timestamp()
         WHERE TAR_TRANS_ID = #{tar_trans_id}::numeric
	</update>

	<select id="selectTransTopicList" parameterType="transVO" resultType="transVO">
		/**
		*  Query ID : selectTransTopicList
		* Description : trans topic 리스트 조회
		* Author :
		**/
        SELECT
               A.TOPIC_ID,
               A.TOPIC_NM,
               A.REGI_ID,
               C.REGI_NM
          FROM T_TRANS_TOPIC_I A
               LEFT JOIN T_TRANS_REGI_INF C ON A.REGI_ID = C.REGI_ID
               JOIN T_TRANSCNG_I B ON B.TRANS_ID = A.SRC_TRANS_ID
         WHERE A.TAR_TRANS_ID IS NULL
           AND ((A.REGI_ID IS NOT NULL AND 'TC004402' = #{topic_type}) OR (A.REGI_ID IS NULL AND 'TC004401' = #{topic_type}))
           AND B.KC_ID = #{kc_id}::numeric
	</select>
	
    <delete id="deleteTransTopicSetting" parameterType="int">
    	/**
	 	* Query ID : deleteTransTopicSetting
	 	* Description : 데이터전송 topic 설정 삭제 end
	 	* Author :
	 	**/
        DELETE FROM T_TRANS_TOPIC_I
         WHERE SRC_TRANS_ID = #{trans_id}
    </delete>
    
	<select id="selectTranExrtTrgList" parameterType="transVO" resultType="transVO">
    	/**
	 	* Query ID : selectTranExrtTrgList
	 	* Description : 소스 전송관리 테이블 조회
	 	* Author : 
	 	**/
       SELECT TRANS_EXRT_TRG_TB_ID, EXRT_TRG_TB_NM
         FROM T_TRANS_EXRTTRG_MAPP
        WHERE TRANS_EXRT_TRG_TB_ID IN (SELECT TAR_TRANS_EXRT_TRG_TB_ID
                                         FROM T_TRANS_TOPIC_I
                                        WHERE SRC_TRANS_ID = #{trans_id}::numeric
                                      )
	</select>

	<select id="selectTranIdTopicList" parameterType="transVO" resultType="transVO">
		/**
		*  Query ID : selectTranIdTopicList
		* Description : trans topic 리스트 조회
		* Author :
		**/
        SELECT A.TRANS_ID, B.TOPIC_ID, B.TOPIC_NM, C.KC_IP, C.KC_PORT, B.REGI_ID
          FROM T_TRANSCNG_I A
               JOIN T_TRANS_TOPIC_I B ON A.TRANS_ID = B.SRC_TRANS_ID
               LEFT JOIN T_TRANS_CON_INF C ON A.KC_ID = C.KC_ID
         WHERE A.TRANS_ID = #{trans_id}::numeric
	</select>

	<select id="selectTranTargetIdTopicList" parameterType="transVO" resultType="transVO">
		/**
		*  Query ID : selectTranTargetIdTopicList
		* Description : trans 타겟 topic 리스트 조회
		* Author :
		**/
        SELECT A.TRANS_ID, B.TOPIC_ID, B.TOPIC_NM, C.KC_IP, C.KC_PORT, B.REGI_ID, D.REGI_NM, D.REGI_IP, D.REGI_PORT
          FROM T_TRANSCNG_TARGET_I A
               JOIN T_TRANS_TOPIC_I B ON A.TRANS_ID = B.TAR_TRANS_ID
               LEFT JOIN T_TRANS_CON_INF C ON A.KC_ID = C.KC_ID
               LEFT JOIN T_TRANS_REGI_INF D ON B.REGI_ID = D.REGI_ID
         WHERE A.TRANS_ID = #{trans_id}::numeric
	</select>
	
    <update id="updateTranExrtTrgInfo"  parameterType="TransVO">
    	/**
	 	* Query ID : updateTransSrcTopic
	 	* Description : source connect 활성화 topic 수정 end
	 	* Author :
	 	**/
        UPDATE T_TRANS_EXRTTRG_MAPP
           SET EXRT_TRG_TB_NM = #{exrt_trg_tb_nm}
        WHERE TRANS_EXRT_TRG_TB_ID = #{trans_exrt_trg_tb_id}::numeric
    </update>
	
	 <delete id="deleteTransConnectLog" parameterType="TransVO">
		/**
	 	* Query ID : deleteTransConnectLog
	 	* Description : 소스 / 타겟 connect log 삭제 end
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANS_ACTSTATE_CNG_G
         WHERE TRANS_ID = #{trans_id}::numeric
	</delete>
	
	<insert id="insertTransKafkaConnectLog"  parameterType="transDbmsVO">
		/**
		* Query ID : insertTransKafkaConnectLog
		* Description : TRANS kafka connect 로그 등록
		* Author : 
		**/
        INSERT INTO T_TRANS_KAFKA_ACTSTATE_CNG_G
                    (
                     KAFKA_ACT_EXE_SN
                   , KC_ID
                   , KC_IP
                   , KC_PORT
                   , ACT_TYPE
                   , ACT_EXE_TYPE
                   , WRK_DTM 
                   , EXE_RSLT_CD
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                    ) 
                    VALUES
                    (
                     nextval('q_t_trans_kafka_actstate_cng_g_01')
                   , (SELECT KC_ID FROM T_TRANS_CON_INF WHERE KC_NM = #{kc_nm} LIMIT 1)
                   , #{kc_ip}
                   , #{kc_port}::numeric
                   , #{act_type}
                   , #{act_exe_type}
                   , clock_timestamp()
                   , #{exe_rslt_cd}
                   , #{frst_regr_id}
                   , clock_timestamp()
                   , #{lst_mdfr_id}
                   , clock_timestamp()
                    )
	</insert>

	<insert id="insertUpTransKafkaConnectLog"  parameterType="transDbmsVO">
		/**
		* Query ID : insertUpTransKafkaConnectLog
		* Description : TRANS kafka connect 로그 등록
		* Author : 
		**/
        INSERT INTO T_TRANS_KAFKA_ACTSTATE_CNG_G
                    (
                     KAFKA_ACT_EXE_SN
                   , KC_ID
                   , KC_IP
                   , KC_PORT
                   , ACT_TYPE
                   , ACT_EXE_TYPE
                   , WRK_DTM 
                   , EXE_RSLT_CD
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                    ) 
                    SELECT nextval('q_t_trans_kafka_actstate_cng_g_01'),
                           #{kc_id}::numeric,
                           #{kc_ip}, 
                           #{kc_port}::numeric,
                           #{act_type},
                           #{act_exe_type},
                           clock_timestamp()
                           #{exe_rslt_cd},
                           #{frst_regr_id},
                           clock_timestamp(),
                           #{lst_mdfr_id},
                           clock_timestamp()
	</insert>
	
	<insert id="insertTransSchemaRegistryLog"  parameterType="transRegiVO">
		/**
		* Query ID : insertTransSchemaRegistryLog
		* Description : TRANS Schema Registry 로그 등록
		* Author : 
		**/
         INSERT INTO t_trans_schem_regi_actstate_cng_g
                    (
                     REGI_ACT_EXE_SN
                   , REGI_ID
                   , REGI_IP
                   , REGI_PORT
                   , ACT_TYPE
                   , ACT_EXE_TYPE
                   , WRK_DTM 
                   , EXE_RSLT_CD
                   , FRST_REGR_ID
                   , FRST_REG_DTM
                   , LST_MDFR_ID
                   , LST_MDF_DTM
                    ) 
                     VALUES
                    ( nextval('q_t_trans_schem_regi_actstate_cng_g_01'),
                            (SELECT REGI_ID FROM T_TRANS_REGI_INF WHERE REGI_NM = #{regi_nm} LIMIT 1),
                           #{regi_ip}, 
                           #{regi_port}::numeric,
                           #{act_type},
                           #{act_exe_type},
                           clock_timestamp(),
                           #{exe_rslt_cd},
                           #{frst_regr_id},
                           clock_timestamp(),
                           #{lst_mdfr_id},
                           clock_timestamp()
                           )
	</insert>
	
	<delete id="deleteTransKafkaConnectLog" parameterType="transDbmsVO">
		/**
	 	* Query ID : deleteTransKafkaConnectLog
	 	* Description : kafka connect log 삭제
	 	* Author : 
	 	**/	
        DELETE FROM T_TRANS_KAFKA_ACTSTATE_CNG_G
        WHERE KC_ID = #{kc_id}::numeric
	</delete>
	
	<delete id="deleteTransSchemaRegistryLog" parameterType="transDbmsVO">
		/**
	 	* Query ID : deleteTransSchemaRegistryLog
	 	* Description : Schema Registry  log 삭제
	 	* Author : 
	 	**/	
        DELETE FROM t_trans_schem_regi_actstate_cng_g
        WHERE REGI_ID = #{regi_id}::numeric
	</delete>
		
	<select id="selectTransComCoIngChk" parameterType="transVO" resultType="hashmap">
		/**
		*  Query ID : selectTransDbmsIngChk
		* Description : trans DBMS 사용여부 체크
		* Author :
		**/
        SELECT
               COUNT(*) AS TOT_CNT,
               COALESCE(SUM(A.ING_CNT),0) AS ING_CNT
          FROM (
                SELECT
                       TRANS_COM_ID,
                       CASE WHEN HEARTBEAT_ACTION_QUERY IS NULL OR HEARTBEAT_ACTION_QUERY = '' THEN 1 ELSE 0 END AS ING_CNT
                  FROM T_TRANSCOMCNG_I
                 WHERE 1 = 1
          ) A
	</select>
	
	<select id="selectTargetTransRegiList" parameterType="hashmap"  resultType="transRegiVO">
		/**
		* Query ID : selectTargetTransRegiList
		* Description : Schema Registry 조회(완료)
		* Author : 
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , A.*
         FROM (
               SELECT
                      REGI_ID
                    , REGI_NM
                    , REGI_IP
                    , REGI_PORT
                    , EXE_STATUS
                    , FRST_REGR_ID
                    , TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
                    , LST_MDFR_ID
                    , TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM 
                 FROM T_TRANS_REGI_INF
                WHERE 1 = 1
                 AND REGI_ID IN
           <foreach item="item" index="index" collection="regi_id" open="(" separator="," close=")"> 
               #{item}::numeric
           </foreach>

                ORDER BY LST_MDF_DTM DESC
        ) A
	</select>
		
	<select id="selectTransComUseCheck" resultType="int" parameterType="int">
		/**
		* Query ID : selectTransComUseCheck
		* Description : 기본 설정 정보 사용 Connector가 있는지 확인 
		* Author :
		**/
        SELECT 
               COUNT(*)
          FROM T_TRANSCNG_I
         WHERE TRANS_COM_ID = #{trasn_com_id}
	</select>
	
</mapper>